{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createSlice}from'@reduxjs/toolkit';import axios from'axios';var initialState={companies:[],loading:false};export var companiesSlice=createSlice({name:'companies',initialState:initialState,reducers:{setCompanies:function setCompanies(state,action){state.companies=action.payload;state.loading=false;},setLoading:function setLoading(state){state.loading=true;}}});var _companiesSlice$actio=companiesSlice.actions,setCompanies=_companiesSlice$actio.setCompanies,setLoading=_companiesSlice$actio.setLoading;export{setCompanies,setLoading};export var fetchCompaniesByCountry=function fetchCompaniesByCountry(country){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var response,data,countryCompanies,companies;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(setLoading());// Set loading state to true\n_context.next=4;return axios.get(\"https://fakerapi.it/api/v1/companies?_quantity=200&_seed=42069\");case 4:response=_context.sent;data=response.data.data;countryCompanies=data.reduce(function(acc,company){var country=company.country;acc[country]=[].concat(_toConsumableArray(acc[country]||[]),[company]);return acc;},{});companies=countryCompanies[country]||[];dispatch(setCompanies(companies));_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log('Error fetching companies:',_context.t0);dispatch(setLoading());// Reset loading state to false in case of an error\ncase 15:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var selectCompanies=function selectCompanies(state){return state.companies.companies;};export var selectLoading=function selectLoading(state){return state.companies.loading;};export default companiesSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","companies","loading","companiesSlice","name","reducers","setCompanies","state","action","payload","setLoading","_companiesSlice$actio","actions","fetchCompaniesByCountry","country","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","data","countryCompanies","wrap","_callee$","_context","prev","next","get","sent","reduce","acc","company","concat","_toConsumableArray","t0","console","log","stop","_x","apply","arguments","selectCompanies","selectLoading","reducer"],"sources":["C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/src/store/companiesSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  companies: [],\r\n  loading: false,\r\n};\r\n\r\nexport const companiesSlice = createSlice({\r\n  name: 'companies',\r\n  initialState,\r\n  reducers: {\r\n    setCompanies: (state, action) => {\r\n      state.companies = action.payload;\r\n      state.loading = false;\r\n    },\r\n    setLoading: (state) => {\r\n      state.loading = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCompanies, setLoading } = companiesSlice.actions;\r\n\r\nexport const fetchCompaniesByCountry = (country) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading()); // Set loading state to true\r\n\r\n    const response = await axios.get(`https://fakerapi.it/api/v1/companies?_quantity=200&_seed=42069`);\r\n    const data = response.data.data;\r\n\r\n    const countryCompanies = data.reduce((acc, company) => {\r\n      const country = company.country;\r\n      acc[country] = [...(acc[country] || []), company];\r\n      return acc;\r\n    }, {});\r\n\r\n    const companies = countryCompanies[country] || [];\r\n\r\n    dispatch(setCompanies(companies));\r\n  } catch (error) {\r\n    console.log('Error fetching companies:', error);\r\n    dispatch(setLoading()); // Reset loading state to false in case of an error\r\n  }\r\n};\r\n\r\nexport const selectCompanies = (state) => state.companies.companies;\r\nexport const selectLoading = (state) => state.companies.loading;\r\n\r\nexport default companiesSlice.reducer;\r\n"],"mappings":"qcAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,YAAY,CAAG,CACnBC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,KACX,CAAC,CAED,MAAO,IAAM,CAAAC,cAAc,CAAGL,WAAW,CAAC,CACxCM,IAAI,CAAE,WAAW,CACjBJ,YAAY,CAAZA,YAAY,CACZK,QAAQ,CAAE,CACRC,YAAY,CAAE,SAAAA,aAACC,KAAK,CAAEC,MAAM,CAAK,CAC/BD,KAAK,CAACN,SAAS,CAAGO,MAAM,CAACC,OAAO,CAChCF,KAAK,CAACL,OAAO,CAAG,KAAK,CACvB,CAAC,CACDQ,UAAU,CAAE,SAAAA,WAACH,KAAK,CAAK,CACrBA,KAAK,CAACL,OAAO,CAAG,IAAI,CACtB,CACF,CACF,CAAC,CAAC,CAEK,IAAAS,qBAAA,CAAqCR,cAAc,CAACS,OAAO,CAAnDN,YAAY,CAAAK,qBAAA,CAAZL,YAAY,CAAEI,UAAU,CAAAC,qBAAA,CAAVD,UAAU,CAA4B,OAAAJ,YAAA,CAAAI,UAAA,EAEnE,MAAO,IAAM,CAAAG,uBAAuB,CAAG,QAA1B,CAAAA,uBAAuBA,CAAIC,OAAO,oCAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAK,SAAAC,QAAOC,QAAQ,MAAAC,QAAA,CAAAC,IAAA,CAAAC,gBAAA,CAAAtB,SAAA,QAAAgB,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAE/DP,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CAAE;AAAAgB,QAAA,CAAAE,IAAA,SAED,CAAA7B,KAAK,CAAC8B,GAAG,iEAAiE,CAAC,QAA5FR,QAAQ,CAAAK,QAAA,CAAAI,IAAA,CACRR,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAACA,IAAI,CAEzBC,gBAAgB,CAAGD,IAAI,CAACS,MAAM,CAAC,SAACC,GAAG,CAAEC,OAAO,CAAK,CACrD,GAAM,CAAAnB,OAAO,CAAGmB,OAAO,CAACnB,OAAO,CAC/BkB,GAAG,CAAClB,OAAO,CAAC,IAAAoB,MAAA,CAAAC,kBAAA,CAAQH,GAAG,CAAClB,OAAO,CAAC,EAAI,EAAE,GAAGmB,OAAO,EAAC,CACjD,MAAO,CAAAD,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEA/B,SAAS,CAAGsB,gBAAgB,CAACT,OAAO,CAAC,EAAI,EAAE,CAEjDM,QAAQ,CAACd,YAAY,CAACL,SAAS,CAAC,CAAC,CAACyB,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAU,EAAA,CAAAV,QAAA,aAElCW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAAZ,QAAA,CAAAU,EAAO,CAAC,CAC/ChB,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CAAE;AAAA,yBAAAgB,QAAA,CAAAa,IAAA,MAAApB,OAAA,iBAE3B,mBAAAqB,EAAA,SAAAzB,IAAA,CAAA0B,KAAA,MAAAC,SAAA,UAED,MAAO,IAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIpC,KAAK,QAAK,CAAAA,KAAK,CAACN,SAAS,CAACA,SAAS,GACnE,MAAO,IAAM,CAAA2C,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIrC,KAAK,QAAK,CAAAA,KAAK,CAACN,SAAS,CAACC,OAAO,GAE/D,cAAe,CAAAC,cAAc,CAAC0C,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}