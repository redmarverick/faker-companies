{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nyldr\\\\OneDrive\\\\Documentos\\\\GitHub\\\\faker-companies\\\\src\\\\components\\\\CountryItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { countriesCode } from './countryCode.jsx';\nimport { findBestMatch } from 'string-similarity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryMap = new Map();\ncountriesCode.forEach(item => {\n  countryMap.set(item.Country.toLowerCase(), item['ISO Code']);\n});\nexport const getISOCode = country => {\n  var _foundCountry;\n  let foundCountry = countryMap.get(country.toLowerCase());\n  if (!foundCountry) {\n    const countryNames = Array.from(countryMap.keys());\n    const bestMatch = findBestMatch(country, countryNames).bestMatch;\n    foundCountry = countryMap.get(bestMatch.target);\n  }\n  return (_foundCountry = foundCountry) !== null && _foundCountry !== void 0 ? _foundCountry : '';\n};\nexport const getImagePath = isoCode => {\n  const imagePath = `/images/${isoCode.toLowerCase()}/vector.svg`;\n  return imagePath;\n};\nexport const CountryItem = _ref => {\n  _s();\n  let {\n    country\n  } = _ref;\n  const [folderExists, setFolderExists] = useState(false);\n  const {\n    name,\n    companyCount\n  } = country;\n  const isoCode = getISOCode(name);\n  const imagePath = getImagePath(isoCode);\n  const displayName = name;\n  useEffect(() => {\n    fetch(`/images/${isoCode.toLowerCase()}`, {\n      method: 'HEAD'\n    }).then(res => {\n      if (res.ok) {\n        setFolderExists(true);\n      }\n    }).catch(err => console.error(err));\n  }, [isoCode]);\n  if (folderExists) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: `/details/${displayName}`,\n        state: {\n          imagePath\n        }\n      },\n      className: \"w-full h-48 relative country-item pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full absolute h-2/3 bg-center bg-contain bg-no-repeat\",\n        style: {\n          backgroundImage: `url(${imagePath})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 right-2 flex justify-end items-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-md font-bold text-right text-white mb-2\",\n            children: displayName.toUpperCase().replace(/\\s*\\([^)]*\\)/g, '').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: companyCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_s(CountryItem, \"gH19c1MzysI0RffybzD6qe9mbPw=\");\n_c = CountryItem;\nexport default CountryItem;\nvar _c;\n$RefreshReg$(_c, \"CountryItem\");","map":{"version":3,"names":["React","useState","useEffect","Link","countriesCode","findBestMatch","jsxDEV","_jsxDEV","countryMap","Map","forEach","item","set","Country","toLowerCase","getISOCode","country","_foundCountry","foundCountry","get","countryNames","Array","from","keys","bestMatch","target","getImagePath","isoCode","imagePath","CountryItem","_ref","_s","folderExists","setFolderExists","name","companyCount","displayName","fetch","method","then","res","ok","catch","err","console","error","to","pathname","state","className","children","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","replace","trim","_c","$RefreshReg$"],"sources":["C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/src/components/CountryItem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { countriesCode } from './countryCode.jsx';\r\nimport { findBestMatch } from 'string-similarity';\r\n\r\nconst countryMap = new Map();\r\n\r\ncountriesCode.forEach((item) => {\r\n  countryMap.set(item.Country.toLowerCase(), item['ISO Code']);\r\n});\r\n\r\nexport const getISOCode = (country) => {\r\n  let foundCountry = countryMap.get(country.toLowerCase());\r\n\r\n  if (!foundCountry) {\r\n    const countryNames = Array.from(countryMap.keys());\r\n    const bestMatch = findBestMatch(country, countryNames).bestMatch;\r\n    foundCountry = countryMap.get(bestMatch.target);\r\n  }\r\n\r\n  return foundCountry ?? '';\r\n};\r\n\r\nexport const getImagePath = (isoCode) => {\r\n  const imagePath = `/images/${isoCode.toLowerCase()}/vector.svg`;\r\n  return imagePath;\r\n};\r\n\r\nexport const CountryItem = ({ country }) => {\r\n  const [folderExists, setFolderExists] = useState(false);\r\n  const { name, companyCount } = country;\r\n  const isoCode = getISOCode(name);\r\n  const imagePath = getImagePath(isoCode);\r\n\r\n  const displayName = name;\r\n\r\n  useEffect(() => {\r\n    fetch(`/images/${isoCode.toLowerCase()}`, { method: 'HEAD' })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setFolderExists(true);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [isoCode]);\r\n\r\n  if (folderExists) {\r\n    return (\r\n      <Link\r\n        to={{\r\n          pathname: `/details/${displayName}`,\r\n          state: { imagePath },\r\n        }}\r\n        className=\"w-full h-48 relative country-item pt-2\"\r\n      >\r\n        <div className=\"w-full absolute h-2/3 bg-center bg-contain bg-no-repeat\" style={{ backgroundImage: `url(${imagePath})` }} />\r\n        <div className=\"absolute bottom-0 right-2 flex justify-end items-end\">\r\n          <div className=\"flex flex-col items-end\">\r\n            <h2 className=\"text-md font-bold text-right text-white mb-2\">{displayName.toUpperCase().replace(/\\s*\\([^)]*\\)/g, '').trim()}</h2>\r\n            <p className=\"text-white\">{companyCount}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default CountryItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE5BL,aAAa,CAACM,OAAO,CAAEC,IAAI,IAAK;EAC9BH,UAAU,CAACI,GAAG,CAACD,IAAI,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,EAAEH,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9D,CAAC,CAAC;AAEF,OAAO,MAAMI,UAAU,GAAIC,OAAO,IAAK;EAAA,IAAAC,aAAA;EACrC,IAAIC,YAAY,GAAGV,UAAU,CAACW,GAAG,CAACH,OAAO,CAACF,WAAW,CAAC,CAAC,CAAC;EAExD,IAAI,CAACI,YAAY,EAAE;IACjB,MAAME,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACd,UAAU,CAACe,IAAI,CAAC,CAAC,CAAC;IAClD,MAAMC,SAAS,GAAGnB,aAAa,CAACW,OAAO,EAAEI,YAAY,CAAC,CAACI,SAAS;IAChEN,YAAY,GAAGV,UAAU,CAACW,GAAG,CAACK,SAAS,CAACC,MAAM,CAAC;EACjD;EAEA,QAAAR,aAAA,GAAOC,YAAY,cAAAD,aAAA,cAAAA,aAAA,GAAI,EAAE;AAC3B,CAAC;AAED,OAAO,MAAMS,YAAY,GAAIC,OAAO,IAAK;EACvC,MAAMC,SAAS,GAAI,WAAUD,OAAO,CAACb,WAAW,CAAC,CAAE,aAAY;EAC/D,OAAOc,SAAS;AAClB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEf;EAAQ,CAAC,GAAAc,IAAA;EACrC,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM;IAAEiC,IAAI;IAAEC;EAAa,CAAC,GAAGnB,OAAO;EACtC,MAAMW,OAAO,GAAGZ,UAAU,CAACmB,IAAI,CAAC;EAChC,MAAMN,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC;EAEvC,MAAMS,WAAW,GAAGF,IAAI;EAExBhC,SAAS,CAAC,MAAM;IACdmC,KAAK,CAAE,WAAUV,OAAO,CAACb,WAAW,CAAC,CAAE,EAAC,EAAE;MAAEwB,MAAM,EAAE;IAAO,CAAC,CAAC,CAC1DC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACVR,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,CAAC,CACDS,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,CAAChB,OAAO,CAAC,CAAC;EAEb,IAAIK,YAAY,EAAE;IAChB,oBACEzB,OAAA,CAACJ,IAAI;MACH2C,EAAE,EAAE;QACFC,QAAQ,EAAG,YAAWX,WAAY,EAAC;QACnCY,KAAK,EAAE;UAAEpB;QAAU;MACrB,CAAE;MACFqB,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBAElD3C,OAAA;QAAK0C,SAAS,EAAC,yDAAyD;QAACE,KAAK,EAAE;UAAEC,eAAe,EAAG,OAAMxB,SAAU;QAAG;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5HjD,OAAA;QAAK0C,SAAS,EAAC,sDAAsD;QAAAC,QAAA,eACnE3C,OAAA;UAAK0C,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtC3C,OAAA;YAAI0C,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAEd,WAAW,CAACqB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjIjD,OAAA;YAAG0C,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEf;UAAY;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EAEA,OAAO,IAAI;AACb,CAAC;AAACzB,EAAA,CAvCWF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAyCxB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}