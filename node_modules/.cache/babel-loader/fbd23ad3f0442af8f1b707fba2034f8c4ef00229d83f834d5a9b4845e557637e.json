{"ast":null,"code":"import React,{useEffect,useState,useMemo}from'react';import{useParams}from'react-router-dom';import{fetchCompaniesByCountry,selectCompanies}from'../store/companiesSlice';import{useDispatch,useSelector}from'react-redux';import Header from'./Header';import{countriesCode}from'./countryCode.jsx';import{getISOCode,getImagePath}from'./CountryItem.jsx';import{findBestMatch}from'string-similarity';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var countryMap=new Map();countriesCode.forEach(function(item){countryMap.set(item.Country.toLowerCase(),item['ISO Code']);});function Details(){var _useParams=useParams(),country=_useParams.country;var dispatch=useDispatch();var companies=useSelector(selectCompanies);var isoCode=useMemo(function(){return getISOCode(country);},[country]);var imagePath=useMemo(function(){return getImagePath(isoCode);},[isoCode]);useEffect(function(){dispatch(fetchCompaniesByCountry(country));},[country,dispatch]);var displayName=useMemo(function(){var removeTextBetweenParentheses=function removeTextBetweenParentheses(str){var startIndex=str.indexOf('(');var endIndex=str.indexOf(')');if(startIndex!==-1&&endIndex!==-1){return str.slice(0,startIndex).trim()+str.slice(endIndex+1).trim();}return str.trim();};return removeTextBetweenParentheses(country);},[country]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{title:\"\".concat(displayName,\" Companies\"),showBackButton:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-2/3 justify-around items-center bg-light-pink\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-36 p-2\",children:/*#__PURE__*/_jsx(\"img\",{className:\"h-3/4\",src:imagePath,alt:displayName})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-1/2 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold text-right text-white mb-2\",children:displayName.toUpperCase()})})]}),/*#__PURE__*/_jsx(\"table\",{className:\"w-full\",children:/*#__PURE__*/_jsx(\"tbody\",{children:companies.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[\"No companies in \",displayName]})}):companies.map(function(company){return/*#__PURE__*/_jsx(\"tr\",{className:\"h-20 companies \",children:/*#__PURE__*/_jsx(\"td\",{className:\"align-middle p-2 text-white\",children:company.name})},company.id);})})})]});}export default Details;","map":{"version":3,"names":["React","useEffect","useState","useMemo","useParams","fetchCompaniesByCountry","selectCompanies","useDispatch","useSelector","Header","countriesCode","getISOCode","getImagePath","findBestMatch","jsx","_jsx","jsxs","_jsxs","countryMap","Map","forEach","item","set","Country","toLowerCase","Details","_useParams","country","dispatch","companies","isoCode","imagePath","displayName","removeTextBetweenParentheses","str","startIndex","indexOf","endIndex","slice","trim","children","title","concat","showBackButton","className","src","alt","toUpperCase","length","map","company","name","id"],"sources":["C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/src/components/Details.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchCompaniesByCountry, selectCompanies } from '../store/companiesSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from './Header';\r\nimport { countriesCode } from './countryCode.jsx';\r\nimport { getISOCode, getImagePath } from './CountryItem.jsx';\r\nimport { findBestMatch } from 'string-similarity';\r\n\r\nconst countryMap = new Map();\r\n\r\ncountriesCode.forEach((item) => {\r\n  countryMap.set(item.Country.toLowerCase(), item['ISO Code']);\r\n});\r\n\r\nfunction Details() {\r\n  const { country } = useParams();\r\n  const dispatch = useDispatch();\r\n  const companies = useSelector(selectCompanies);\r\n\r\n  const isoCode = useMemo(() => getISOCode(country), [country]);\r\n  const imagePath = useMemo(() => getImagePath(isoCode), [isoCode]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCompaniesByCountry(country));\r\n  }, [country, dispatch]);\r\n\r\n  const displayName = useMemo(() => {\r\n    const removeTextBetweenParentheses = (str) => {\r\n      const startIndex = str.indexOf('(');\r\n      const endIndex = str.indexOf(')');\r\n      if (startIndex !== -1 && endIndex !== -1) {\r\n        return str.slice(0, startIndex).trim() + str.slice(endIndex + 1).trim();\r\n      }\r\n      return str.trim();\r\n    };\r\n\r\n    return removeTextBetweenParentheses(country);\r\n  }, [country]);\r\n\r\n  return (\r\n    <div>\r\n      <Header title={`${displayName} Companies`} showBackButton={true} />\r\n      <div className=\"flex h-2/3 justify-around items-center bg-light-pink\">\r\n        <div className=\"w-36 p-2\">\r\n          <img className=\"h-3/4\" src={imagePath} alt={displayName} />\r\n        </div>\r\n        <div className=\"w-1/2 flex items-center justify-center\">\r\n          <h2 className=\"text-lg font-bold text-right text-white mb-2\">{displayName.toUpperCase()}</h2>\r\n        </div>\r\n      </div>\r\n      <table className=\"w-full\">\r\n        <tbody>\r\n          {companies.length === 0 ? (\r\n            <tr>\r\n              <td>No companies in {displayName}</td>\r\n            </tr>\r\n          ) : (\r\n            companies.map((company) => (\r\n              <tr key={company.id} className=\"h-20 companies \">\r\n                <td className=\"align-middle p-2 text-white\">{company.name}</td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Details;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}