{"ast":null,"code":"import _slicedToArray from\"C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{countriesCode}from'./countryCode.jsx';import{findBestMatch}from'string-similarity';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var countryMap=new Map();countriesCode.forEach(function(item){countryMap.set(item.Country.toLowerCase(),item['ISO Code']);});export var getISOCode=function getISOCode(country){var _foundCountry;var foundCountry=countryMap.get(country.toLowerCase());if(!foundCountry){var countryNames=Array.from(countryMap.keys());var bestMatch=findBestMatch(country,countryNames).bestMatch;foundCountry=countryMap.get(bestMatch.target);}return(_foundCountry=foundCountry)!==null&&_foundCountry!==void 0?_foundCountry:'';};export var getImagePath=function getImagePath(isoCode){var imagePath=\"/images/\".concat(isoCode.toLowerCase(),\"/vector.svg\");return imagePath;};export var CountryItem=function CountryItem(_ref){var country=_ref.country;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),folderExists=_useState2[0],setFolderExists=_useState2[1];var name=country.name,companyCount=country.companyCount;var isoCode=getISOCode(name);var imagePath=getImagePath(isoCode);var displayName=name;useEffect(function(){fetch(\"/images/\".concat(isoCode.toLowerCase()),{method:'HEAD'}).then(function(res){if(res.ok){setFolderExists(true);}}).catch(function(err){return console.error(err);});},[isoCode]);if(folderExists){return/*#__PURE__*/_jsxs(Link,{to:{pathname:\"/details/\".concat(displayName),state:{imagePath:imagePath}},className:\"w-full h-48 relative country-item pt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full absolute h-2/3 bg-center bg-contain bg-no-repeat\",style:{backgroundImage:\"url(\".concat(imagePath,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-0 right-2 flex justify-end items-end\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-end\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-md font-bold text-right text-white mb-2\",children:displayName.toUpperCase().replace(/\\s*\\([^)]*\\)/g,'').trim()}),/*#__PURE__*/_jsx(\"p\",{className:\"text-white\",children:companyCount})]})})]});}return null;};export default CountryItem;","map":{"version":3,"names":["React","useState","useEffect","Link","countriesCode","findBestMatch","jsx","_jsx","jsxs","_jsxs","countryMap","Map","forEach","item","set","Country","toLowerCase","getISOCode","country","_foundCountry","foundCountry","get","countryNames","Array","from","keys","bestMatch","target","getImagePath","isoCode","imagePath","concat","CountryItem","_ref","_useState","_useState2","_slicedToArray","folderExists","setFolderExists","name","companyCount","displayName","fetch","method","then","res","ok","catch","err","console","error","to","pathname","state","className","children","style","backgroundImage","toUpperCase","replace","trim"],"sources":["C:/Users/Nyldr/OneDrive/Documentos/GitHub/faker-companies/src/components/CountryItem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { countriesCode } from './countryCode.jsx';\r\nimport { findBestMatch } from 'string-similarity';\r\n\r\nconst countryMap = new Map();\r\n\r\ncountriesCode.forEach((item) => {\r\n  countryMap.set(item.Country.toLowerCase(), item['ISO Code']);\r\n});\r\n\r\nexport const getISOCode = (country) => {\r\n  let foundCountry = countryMap.get(country.toLowerCase());\r\n\r\n  if (!foundCountry) {\r\n    const countryNames = Array.from(countryMap.keys());\r\n    const bestMatch = findBestMatch(country, countryNames).bestMatch;\r\n    foundCountry = countryMap.get(bestMatch.target);\r\n  }\r\n\r\n  return foundCountry ?? '';\r\n};\r\n\r\nexport const getImagePath = (isoCode) => {\r\n  const imagePath = `/images/${isoCode.toLowerCase()}/vector.svg`;\r\n  return imagePath;\r\n};\r\n\r\nexport const CountryItem = ({ country }) => {\r\n  const [folderExists, setFolderExists] = useState(false);\r\n  const { name, companyCount } = country;\r\n  const isoCode = getISOCode(name);\r\n  const imagePath = getImagePath(isoCode);\r\n\r\n  const displayName = name;\r\n\r\n  useEffect(() => {\r\n    fetch(`/images/${isoCode.toLowerCase()}`, { method: 'HEAD' })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setFolderExists(true);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [isoCode]);\r\n\r\n  if (folderExists) {\r\n    return (\r\n      <Link\r\n        to={{\r\n          pathname: `/details/${displayName}`,\r\n          state: { imagePath },\r\n        }}\r\n        className=\"w-full h-48 relative country-item pt-2\"\r\n      >\r\n        <div className=\"w-full absolute h-2/3 bg-center bg-contain bg-no-repeat\" style={{ backgroundImage: `url(${imagePath})` }} />\r\n        <div className=\"absolute bottom-0 right-2 flex justify-end items-end\">\r\n          <div className=\"flex flex-col items-end\">\r\n            <h2 className=\"text-md font-bold text-right text-white mb-2\">{displayName.toUpperCase().replace(/\\s*\\([^)]*\\)/g, '').trim()}</h2>\r\n            <p className=\"text-white\">{companyCount}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default CountryItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}